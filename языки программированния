ЯЗЫКИ ПРОГРАММИРОВАНИЯ 
ЯЗЫКИ ПРОГРАММИРОВАНИЯ ТАКИЕ ЖЕ РАЗНЫЕ КАК И НОСТАЯЩИЕ 
ИХ ОЧЕНЬ МНОГО #SHARP PYTHON C++ C JAVA JAVASKRIPT И ДРУГИЕ 
ОНИ ДЕЛЯТСЯ НА ДВЕ ГРУППЫ

High-Level Languages

Характеристики: Более понятны для человека, ближе к естественному языку, обычно требуют перевода в машинный язык с помощью компиляторов или интерпретаторов.

Примеры: Python, Java, C#.

Применение: Веб-приложения, разработка программного обеспечения, мобильные приложения.







Low-Level Languages

Характеристики: Ближе к машинному языку, сложнее для понимания человеком, быстрее в исполнении.

Примеры: Ассемблер, С.

Применение: Разработка операционных систем, системы реального времени, встроенные системы.



Ассемблер, двоичный код и Python представляют собой различные уровни абстракции в программировании, каждый из которых имеет свои особенности и применение:

ДВОИЧНЫЙ КОД 
УРОВЕНЬ ОБСТРАКЦИИ:НИЖЕ ПЛИНТУСА , ДАЕТ ПРЯМЫЕ ИНСТРУКЦИИ ПРОЦЕССОРУ 
ЧИТАЕМОСТЬ: КАК ПОДЧЕРК У ВРАЧЕЙ
ПРОИЗВОДИТЕЛЬНОСТЬ: МАКСИМАЛЬНАЯ ВЫПОЛНЯЕТСЯ ВПРЯМУЮ ПРОЦЕССОРОМ 
ИСПОЛЬЗОВАНИЕ: НЕ ПОДХОДИТ ДЛЯ РУЧНОГО ПРОГРАММИРОВАНИЯ 




АССЕМБЛЕР 
УРОВЕНЬ ОБСТРАКЦИИ : НИЗКИЙ(КАК ТВОЯ САМООЦЕНКА) ПРЕОБРАЗУЕТ МАШИННЫЙ КОД В ПОНЯТНЫЕ МНЕМОНИКИ, ТРЕБУЕТ ЗНАНИЯ АППАРАТУРЫ
ЧИТАЕМОСТЬ: СЛОЖНЕЕ ВЫСОКОУРОВНЕВЫХ ЯЗЫКОВ НО ЛЕГЧЕ ЧЕМ ДВОИЧНЫЙ КОД
ПРОИЗВОДИТЕЛЬНОСТЬ: ВЫСОКАЯ ЗА СЧЕТ ТОЧНОЙ НОСТРОЙКИ АППАРАТНЫХ РЕСУРСОВ
ИСПОЛЬЗОВАНИЕ: РАЗРАБОТКА ВСТРОЕНЫХ И  ОПЕРАЦИОННЫХ СИСТЕМ,ТРЕБУЮЩИЙ КОНТРОЛЯ НАД АППАРАТУРОЙ



PYTHON 
УРОВЕНЬ ОБСТРАКЦИИ:ВЫСОКИЙ  
ЧИТАЕМОСТЬ: ОЧЕНЬ ВЫСОКА ИЗ ЗА ПРОСТОГО СИНТАКСИСА   
ПРОИЗВОДИТЕЛЬНОСТЬ: НИЖЕ НИЗКОУРОВНИВЫХ ЯЗЫКОВ ИЗ ЗА ОБСТРАГИРОВАНЬЯ ПАМЯТЬЮ
ИСПОЛЬЗОВАНИЕ: ВЕБ РАЗРАБОТКА
               МАШИННОЕ ОБУЧЕНИЕ
               НАУЧНОЕ ИСЛЕДОВАНИЯ 
               АВТОМАТИЗАЦИЯ ПРОЦЕССОРОВ И ТД
